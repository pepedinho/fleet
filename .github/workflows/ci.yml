name: Rust CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  fmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup update stable
          rustup default stable
      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup update stable
          rustup default stable
      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install Rust
        run: |
          rustup update stable
          rustup default stable
      - name: Clear files      
        run: rm -rf ~/.local/share/fleetd
      - name: Run cargo test --test-threads=1
        run: cargo test --verbose

  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup update stable
          rustup default stable
      - name: Build release binary
        run: cargo build --release
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust-binary
          path: target/release/